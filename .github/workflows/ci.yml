name: CI Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-branch-name:
    runs-on: ubuntu-latest
    steps:
      - name: Verificar padrão do nome da branch
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          if [[ ! "$BRANCH_NAME" =~ ^(feat|fix|hotfix|release|chore|test|docs|refactor|perf|ci|build)/[a-z0-9._-]+$ && "$BRANCH_NAME" != "main" ]]; then
            echo "❌ Nome de branch inválido: $BRANCH_NAME"
            echo "O padrão deve ser: <tipo>/<descricao> (ex: feat/login, fix/bug-123)"
            exit 1
          fi

  build:
    needs: check-branch-name
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build JAR with Maven
        run: mvn clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        env:
          BRANCH_NAME: ${{ github.ref_name }}
          COMMIT_HASH: ${{ github.sha }}
        run: |
          IMAGE_TAG="${BRANCH_NAME}-${COMMIT_HASH:0:7}"
          docker build -t my-app:${IMAGE_TAG} .
          docker tag my-app:${IMAGE_TAG} ${{ vars.DOCKER_USERNAME }}/my-app:${IMAGE_TAG}
          docker push ${{ vars.DOCKER_USERNAME